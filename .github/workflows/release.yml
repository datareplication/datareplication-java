name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Semantic version to release is compared to the version in the build.gradle.kts'
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Check that the current commit is in main branch
        run: git fetch origin main && git merge-base --is-ancestor $GITHUB_SHA origin/main
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Check version to match
        run: ./gradlew checkVersion -PexpectedVersion=${{ github.event.inputs.version }}
      - name: Build JavaDoc
        run: ./gradlew javadoc
      - name: Release with jReleaser
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_MAVENCENTRAL_TOKEN: ${{ secrets.JRELEASER_MAVENCENTRAL_TOKEN }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
        run: ./gradlew publish jreleaserFullRelease --stacktrace
      - name: Upload Javadoc artifact
        uses: actions/upload-pages-artifact@v3
        with:
         path: build/docs/javadoc
  publishDocs:
    name: Publish Javadoc
    runs-on: ubuntu-latest
    needs: release
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      id-token: write
      pages: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
